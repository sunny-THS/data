#include "DHT.h"
//#include <WiFiUdp.h>
//#include <NTPClient.h>
#include <DNSServer.h>
#include <WiFiClient.h>
#include <ESP8266WiFi.h> //https://github.com/esp8266/Arduino
#include <WiFiManager.h> //https://github.com/tzapu/WiFiManager
#include <ESP8266mDNS.h>
#include <FirebaseESP8266.h> // firebase for esp8266
#include <ESP8266WebServer.h>
#include <ESP8266HTTPUpdateServer.h>

const char* host = "E-SMART";
const char* updatePath = "/update";
const char* updateUsername = "admin";
const char* updatePassword = "admin@P@ssW0rD";
const char* idAP = "ESP_AP";
const char* pwAP = "123456789+-*/";
//const String days[] = {"Sun","Mon","Tue","Wed","Thu","Fri","Sat"};

// set data firebase
const String PUMP = "/ThongSo/PumpIsWork";
const String MODE = "/ThongSo/Mode";
const String TEMPERATURE = "/ThongSo/NhietDo"; // temperature
const String HUMIDITY = "/ThongSo/DoAm"; // humidity
const String IP_DATA = "/ThongSo/IP/"; 
const String device = "Relay"; // change==================================== 
const String ADDRESS_DATA = "/val";
const String NAME_DATA = "/name"; 
//#define TIME "/ThongSo/Time/RELAY"

// Chan ket noi ESP8266 voi DHT la GPIO5 (chan D1)
#define DHTPIN D1
// Chan ket noi ESP8266 voi DHT la GPIO5 (chan D1)
#define relay D2

// firebase database
#define FIREBASE_HOST "misting-acb22.firebaseio.com"
#define FIREBASE_AUTH "M2IpMvlhcYjDRCCXaXrrdmlgw2POdaH9iC5fZpJa" // token

// Su dung DHT11
#define DHTTYPE DHT11
DHT dht(DHTPIN, DHTTYPE, 15);

// variable
float h = 0.0; // do am
float t = 0.0; // nhiet do
FirebaseData firebaseData; // bien trung gian xu ly

ESP8266WebServer webServer(80);
ESP8266HTTPUpdateServer httpUpdater;

//WiFiUDP udp;
//NTPClient ntpClient(udp, "3.asia.pool.ntp.org", 7*3600);

const char MainPage[] PROGMEM = R"=====(
  <!DOCTYPE html>
  <html lang="vi">
    <head>
      <title>E-SMART HOME</title>
      <style>
        body {
          margin: 0;
        }
        #b {
          font-size: 20px;
          padding: 5px;
          cursor: pointer;
        }
        #b:active{
          color: rgb(0, 214, 255);
          border: 3px #000 solid;
        }
        .main{
          position: absolute;
          text-align: center;
          height: auto;
          width: 40%;
          border: 3px #000 solid;
          padding: 50px 0;
          background: rgb(0, 214, 255);
          color: #fff;
          left: 50%;
          top: 50%;
          transform: translate(-50%, -50%);
        }
      </style>
      <meta name="viewport" content="width=device-width,user-scalable=0" charset="UTF-8">
    </head>
    <body>
      <div class="main">
        <div>
          <h1 style="margin-top:0;">Esp8266 dùng để điều khiển relay</h1>
        </div>
        <div>
          <button id="b" onclick="window.location.href='/update'">UPLOAD FIRMWARE</button>
        </div>
      </div>
    </body>
  </html>
)=====";

void configModeCallback (WiFiManager *myWiFiManager)
{
  Serial.println("Entered config mode");
  Serial.println(WiFi.softAPIP());
  Serial.println(myWiFiManager->getConfigPortalSSID());
}

void setup() {
  Serial.begin(115200);
  //Khai bao wifiManager
  WiFiManager wifiManager;
  //Setup callback de khoi dong AP voi SSID "ESP+chipID"
  wifiManager.setAPCallback(configModeCallback);
  if (!wifiManager.autoConnect(idAP, pwAP))
  {
    Serial.println("..........................................................................................................");
    //Neu ket noi that bai thi reset
    ESP.reset();
    delay(500);
  }
  
  // Thanh cong thi bao ra man hinh
  Serial.println("connected...");

  // update esp8266
  MDNS.begin(host);
  MDNS.addService("http", "tcp", 80);

  httpUpdater.setup(&webServer, updatePath, updateUsername, updatePassword);
  webServer.on("/",[]{
    String s = MainPage;
    webServer.send(200,"text/html",s);
  });
  webServer.begin();
  
  //khoi tao ntp
  //ntpClient.begin();
  
  // chuong trinh chinh
  // khoi tao firebase
  Firebase.begin(FIREBASE_HOST, FIREBASE_AUTH);
  // Khoi tao DHT
  dht.begin();
  //khoi dong relay
  pinMode(relay, OUTPUT);
  
  Firebase.setInt(firebaseData, PUMP, 0);
  Firebase.setInt(firebaseData, MODE, 0);
  Firebase.setString(firebaseData, IP_DATA + device + NAME_DATA, device);
  Firebase.setString(firebaseData, IP_DATA + device + ADDRESS_DATA, WiFi.localIP().toString());
}

void XuLy_MayBom()
{
  if (Firebase.getInt(firebaseData, PUMP)) {
    if (firebaseData.dataType() == "int") {
      digitalWrite(relay, firebaseData.intData());
    }
  } else {
    Serial.println(firebaseData.errorReason());
  }
}

void loop() {
  MDNS.update();
  webServer.handleClient();

  // chuong trinh chinh===========================================
  // Reading temperature and humidity
  h = dht.readHumidity();
  // Read temperature as Celsius
  t = dht.readTemperature();
  //Serial.println(t);
  //Serial.println(h);

  Firebase.setFloat(firebaseData, TEMPERATURE, t);
  Firebase.setFloat(firebaseData, HUMIDITY, h);

  if (Firebase.getInt(firebaseData, MODE)) {
    if (firebaseData.dataType() == "int") {
      //Serial.println(firebaseData.intData());
      if(firebaseData.intData()==1) // neu mode = 1 (da bat mode)
      {
        XuLy_MayBom();
      }else // da tat mode
      {
        //xu li nhiet do
        if(t>35 && h>50)
        {
          Firebase.setInt(firebaseData, PUMP, 1);
          XuLy_MayBom();
          delay(60000);

          Firebase.setInt(firebaseData, PUMP, 0);
          XuLy_MayBom();

          size_t a=0;
          while(a++<60)
          {
             // Reading temperature and humidity
            h = dht.readHumidity();
            // Read temperature as Celsius
            t = dht.readTemperature();
            //Serial.println(t);
            //Serial.println(h);
    
            Firebase.setFloat(firebaseData, TEMPERATURE, t);
            Firebase.setFloat(firebaseData, HUMIDITY, h);
            delay(3000); 
          }
        }
      }
    }
  } else {
    Serial.println("oidfgdf");
  }
  
  //ntpClient.update();
  //delay(1000);
  //Serial.println(ntpClient.getEpochTime());
  //Firebase.setString(firebaseData, TIME, days[ntpClient.getDay()] + " " + ntpClient.getFormattedTime());
}
